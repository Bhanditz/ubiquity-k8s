apiVersion: batch/v1
kind: Job
metadata:
  name: pre-delete-pv-job
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
  namespace: ubiquity
  labels:
    app: {{ template "ibm_storage_enabler_for_containers.name" . }}
    chart: {{ template "ibm_storage_enabler_for_containers.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    spec:
      containers:
      - name: curl
        image: byrnedo/alpine-curl
        env:
        - name: KUBERNETES_DNS_RECORD
          value: "kubernetes.default"
        - name: TOKEN
          value: "cat /var/run/secrets/kubernetes.io/serviceaccount/token"
        - name: PV_NAME
          value: "ibm-ubiquity-db"
        - name: PV_URL
          value: "https://$(KUBERNETES_DNS_RECORD)/api/v1/persistentvolumes/$(PV_NAME)"
        - name: AUTH
          value: "Authorization: Bearer $TOKEN_VALUE"
        - name: ACCEPT
          value: "Accept: application/json"
        - name: CONTENT_TYPE
          value: "Content-Type: application/strategic-merge-patch+json"
        - name: DELETE_PV
          value: "curl -k --cacert /var/run/secrets/kubernetes.io/serviceaccout/ca.crt -H \"$(AUTH)\" -X DELETE $(PV_URL)"
        - name: GET_PV
          value: "curl -k --cacert /var/run/secrets/kubernetes.io/serviceaccout/ca.crt -H \"$(AUTH)\" $(PV_URL)"
        - name: STATUS_CODE
          value: "echo $GET_RESPONSE | awk -F 'code\": ' '{print $2}' | awk -F ' ' '{print $1}'"
        - name: NOTFOUND_CODE
          value: "404"
        - name: WAIT_FOR_DELETED
          value: "retries=10; while true; do GET_RESPONSE=`$(GET_PV)`; code=`$(STATUS_CODE)`; if [ -n \"$code\" ]; then if [ $code = $(NOTFOUND_CODE) ]; then echo \"PV $(PV_NAME) was deleted.\" ; return; fi; elif [ $retries -eq 0 ]; then echo \"PV $(PV_NAME) still exists after all retrise. Exiting.\"; exit 2; else echo \"PV $(PV_NAME) still exists. sleeping 2 sec before retrying to check.\"; retries=$(($retries - 1)); sleep 1; fi; done;"
        - name: TITLE
          value: "Delete persistentvolumes"
        - name: DELIMITER
          value: "--------------------------------------------------------"
        command: ["/bin/sh"]
        args: ["-c", "echo -e '$(DELIMITER)\n$(TITLE)\n$(DELIMITER)'; TOKEN_VALUE=`$(TOKEN)`; echo $(DELETE_PV); delete_pv=`$(DELETE_PV)`; $(WAIT_FOR_DELETED)"]
      restartPolicy: Never
      serviceAccount: ubiquity
  backoffLimit: 1
~